[{"/home/akdas/Desktop/Work/quiz_frontend/src/index.js":"1","/home/akdas/Desktop/Work/quiz_frontend/src/App.js":"2","/home/akdas/Desktop/Work/quiz_frontend/src/Components/RandomQuiz.js":"3","/home/akdas/Desktop/Work/quiz_frontend/src/Components/QuizSelect.jsx":"4","/home/akdas/Desktop/Work/quiz_frontend/src/Api/ConnectApi.js":"5","/home/akdas/Desktop/Work/quiz_frontend/src/Components/Framework/Header.js":"6","/home/akdas/Desktop/Work/quiz_frontend/src/Components/Framework/Footer.js":"7"},{"size":221,"mtime":1609337038031,"results":"8","hashOfConfig":"9"},{"size":441,"mtime":1619692285311,"results":"10","hashOfConfig":"9"},{"size":4105,"mtime":1619692235034,"results":"11","hashOfConfig":"9"},{"size":4025,"mtime":1619722514696,"results":"12","hashOfConfig":"9"},{"size":647,"mtime":1609407728538,"results":"13","hashOfConfig":"9"},{"size":950,"mtime":1619692561276,"results":"14","hashOfConfig":"9"},{"size":1277,"mtime":1615127795900,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1is1dzo",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/akdas/Desktop/Work/quiz_frontend/src/index.js",[],["33","34"],"/home/akdas/Desktop/Work/quiz_frontend/src/App.js",[],"/home/akdas/Desktop/Work/quiz_frontend/src/Components/RandomQuiz.js",["35","36"],"import React, {useState,useEffect} from 'react';\nimport {useParams, Link} from 'react-router-dom';\nimport ConnectApi from '../Api/ConnectApi';\n\nimport Header from \"./Framework/Header\";\nimport Footer  from \"./Framework/Footer\";\n\n\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Radio from '@material-ui/core/Radio'\nimport Button from '@material-ui/core/Button'\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Alert,AlertTitle} from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme)=>({\n\tpaper: {\n\n\t\tmarginTop: theme.spacing(10),\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t},\n\n\tform: {\n\t\twidth: \"100%\",\n\t\tmargininTop: theme.spacing(1),\n\t},\n\n\tsubmit: {\n\t\tmargin: theme.spacing(2,0,2),\n\t},\n\n\tcorrect: {\n\t\tcolor: \"blue\",\n\t},\n\n}));\n\nconst RandomQuiz = ()=>{\n\n\tconst classes = useStyles();\n\n\tconst {topic} = useParams();\n\t//console.log(topic);\n\n\t// const API_URL = \"http://127.0.0.1:8000/quiz/api/r/\" + topic;\n\tconst API_URL = \"https://csf-quiz.herokuapp.com/quiz/api/r/\" + topic; \n\n\tconst [dataState] = ConnectApi(API_URL);\n\n\tconsole.log(dataState,\"dataState\");\n\tconst [answer,setAnswer]=useState({});\n\n\tconst ans = dataState.data.flatMap((q)=> q.answer);\n\tconsole.log(ans,\"ans\");\n\n\n\tconst [answerCheck,setAnswerCheck] = useState();\n\n\tuseEffect(()=>{\n\t\tif(Object.keys(answer).length===0) {\n\t\t\tsetAnswer(createInitialAnswer());\n\t\t}\n\t}, [answer]);\n\n\tconsole.log(answer);\n\n\t\n\tconst handleSelection = (e)=>{\n\t\tsetAnswer({...answer,[e.target.value]:e.target.checked});\n\t}\n\t\n\tconst createInitialAnswer=()=>{\n\t\tlet z = ans.flatMap((obj)=>obj.id);\n\t\tvar falseInitAnsObj = {};\n\n\t\tfor(var x=0;x<ans.length;x++) {\n\t\t\tfalseInitAnsObj[z[x]]=false;\n\t\t}\n\t\treturn falseInitAnsObj;\n\t};\n\n\t\n\tconst checkAnswer = (e)=>{\n\t\te.preventDefault();\n\n\t\tlet n=ans.map((obj)=>obj.is_right);\n\t\tlet y = {...n};\n\n\t\tconsole.log(y,\"actualAns answer\");\n\t\tconsole.log(answer,\"user answer\");\n\n\t\tfunction  arrayEquals(usrAns,actualAns) {\n\n\t\t\treturn (\n\t\t\t\tArray.isArray(usrAns) &&\n\t\t\t\tArray.isArray(actualAns) &&\n\t\t\t\tusrAns.length===actualAns.length &&\n\t\t\t\tactualAns.every((val,index)=>val===usrAns[index])\n\t\t\t\t);\n\t\t}\n\n\t\tlet actualAns = Object.values(y);\n\t\tlet usrAns= Object.values(answer);\n\t\tif(arrayEquals(usrAns,actualAns))\n\t\t{\n\t\t\tsetAnswerCheck(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetAnswerCheck(false);\n\t\t}\n\t\t\n\t}\n\n\tfunction refreshPage() {\n\t\twindow.location.reload(false);\n\t}\n\n\n\tfunction Result() {\n\t\tif(answerCheck===true) {\n\t\t\treturn(\n\t\t\t\t<Alert severity =\"success\">\n\t\t\t\t\t<AlertTitle> Correct Answer </AlertTitle>\n\t\t\t\t\tWell Done you got it right.\n\t\t\t\t\t<Link href=\"#\" variant=\"body2\" onClick={refreshPage}>\n\t\t\t\t\t {\"Next Question\"}\n\t\t\t\t\t</Link>\n\t\t\t\t</Alert>\t \n\n\t\t\t\t)\n\t\t}\n\t\telse if(answerCheck===false) {\n\t\t\treturn(\n\t\t\t\t<Alert severity =\"error\">\n\t\t\t\t\t<AlertTitle> Wrong Answer </AlertTitle>\n\t\t\t\t\tPlease Try Again\n\t\t\t\t</Alert>\t\n\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t<> </>\n\t\t\t)\n\t\t}\n\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t<div className={classes.paper}>\n\n\t\t\t\t\t{dataState.data.map(({title, answer},i)=>(\n\n\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t{answer.map(({answer_text,id})=>(\n\n\t\t\t\t\t\t\t<RadioGroup>\n         \t\t\t\t\t\n         \t\t\t\t\t\t<FormControlLabel \n         \t\t\t\t\t\t  control={\n         \t\t\t\t\t\t  \t<Checkbox\n         \t\t\t\t\t\t  \t\tvalue={id}\n         \t\t\t\t\t\t  \t\tcolor=\"primary\"\n         \t\t\t\t\t\t  \t\tonChange={handleSelection}\n         \t\t\t\t\t\t  \t/>\t\n         \t\t\t\t\t\t  }\n         \t\t\t\t\t\t  label={answer_text}\n         \t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t</RadioGroup>\n\n\t\t\t\t\t\t\t))}\n\n\n\t\t\t\t\t\t</div>\t\n\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={checkAnswer}\n\t\t\t\t\t\t>\n\t\t\t\t\t\tSubmit Answer\n\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Result/>\n\n\t\t\t\t</div>\n\n\t\t\t</Container>\n\t\t\t\n\t\t\t<Footer/>\n\t\t\t\n\t\t</>\n\t\t)\n}\n\nexport default RandomQuiz;","/home/akdas/Desktop/Work/quiz_frontend/src/Components/QuizSelect.jsx",["37","38"],"/home/akdas/Desktop/Work/quiz_frontend/src/Api/ConnectApi.js",["39"],"import axios from 'axios';\n\nimport {useState,useEffect} from 'react';\n\nconst useCollectData = (url)=>{\n\n\tconst [fetch,setFetch] = useState({isFetching:false})\n\tconst [dataState,setdataState] = useState({data:[]});\n\tconst [apiurl] = useState(url);\n\n\tuseEffect(()=>{\n\t\tconst fetchDataFromApi = async ()=>{\n\n\t\t\ttry{\n\t\t\t\tsetFetch({isFetching:true})\n\n\t\t\t\tconst response = await axios.get(apiurl)\n\n\t\t\t\tsetdataState({...dataState, data:response.data});\n\n\t\t\t}\n\t\t\tcatch (e){\n\t\t\t\tsetFetch({...fetch, isFetching:true})\n\t\t\t}\n\n\t\t};\n\n\t\tfetchDataFromApi();\n\t},[]);\n\n\tconsole.log(dataState,\"in use effect\");\n\n\treturn [dataState]\n\n}\n\nexport default useCollectData;","/home/akdas/Desktop/Work/quiz_frontend/src/Components/Framework/Header.js",[],"/home/akdas/Desktop/Work/quiz_frontend/src/Components/Framework/Footer.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":12,"column":8,"nodeType":"46","messageId":"47","endLine":12,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":68,"column":5,"nodeType":"50","endLine":68,"endColumn":13,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"52","line":18,"column":26,"nodeType":"46","messageId":"47","endLine":18,"endColumn":39},{"ruleId":"44","severity":1,"message":"53","line":21,"column":7,"nodeType":"46","messageId":"47","endLine":21,"endColumn":16},{"ruleId":"48","severity":1,"message":"54","line":29,"column":4,"nodeType":"50","endLine":29,"endColumn":6,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Radio' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createInitialAnswer'. Either include it or remove the dependency array.","ArrayExpression",["58"],"'ThemeProvider' is defined but never used.","'darkTheme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'apiurl', 'dataState', and 'fetch'. Either include them or remove the dependency array. You can also do a functional update 'setdataState(d => ...)' if you only need 'dataState' in the 'setdataState' call.",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [answer, createInitialAnswer]",{"range":"64","text":"65"},"Update the dependencies array to be: [apiurl, dataState, fetch]",{"range":"66","text":"67"},[1592,1600],"[answer, createInitialAnswer]",[545,547],"[apiurl, dataState, fetch]"]